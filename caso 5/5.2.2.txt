###### Como utilizar ########

# 1) Copiar e colar o código abaixo no simulador turingmachine.io
# 2) Clicar em 'load machine'
# 3) Clicar em 'run' ou, alternativamente, em 'step' para avançar a máquina passo a passo

### Nota 1 ###
# Todas as máquinas para o simulador contém um estado chamado "set". Esse estado não é listado nas tabelas.
# Esse estado coloca o cabeçote da máquina na posição em que o cabeçote estava no momento em que a máquina da etapa anterior parou. 
# Isto é para simular as várias etapas como se fossem uma máquina só.

### Nota 2 ###
# É possível modificar o input se quiser testar outras palavras de entrada.
# Se atente que a cada etapa o formato da palavra de entrada deve ser igual a palavra na fita deixada pela máquina anterior.
# Uma boa idéia é simular o fluxo inteiro desde a etapa 0, atualizando manualmente a palavra de entrada e copiando a máquina da próxima etapa a partir da segunda linha (blank: ' ').

# Exemplo -> Se em 5.1 o segundo argumento da subtração for maior que o primeiro, este bloco é executado (a partir do estado adjust1_1) (ex: horário de partida = 1 hora, -3 horas de fuso, o resultado seria 22 horas no local de chegada)
# A palavra da fita neste exemplo foi encurtada para execução mais rápida (o conteúdo marcado por E e F não é mais considerado nesta etapa)
# O caractere K foi inserido aqui como apoio ao estado set, para posicionar a máquina no mesmo estado deixado por 5.1
# Este bloco é sempre sucedido pelo bloco 5.2.2

input: '<0B0CXXD1111E1F1AX Y TT1111111111111111111111 K'
blank: ' '
start state: set
table:
  set:
    ['A','B','C','D','E','F','G', 0, 1, ' ', 'X', 'Y', 'T', '<'] : {R: set}
    'K' : {write: ' ', L: add24_end}
  add24_end:
    ' ' : {write: ' ', L: add24_end}
    1 : {write: 1, L: add24_end}
    'T' : {write: 1, R: erase_set}
    ['X', 'Y'] : {L: add24_end}
    'A' : {write: 'G', R: done1}
  erase_set:
    1 : {write: 1, R: erase_set}
    ' ' : {write: ' ', L: erase}
  erase:
    1 : {write: ' ', L: add24_end}
  done1:
    