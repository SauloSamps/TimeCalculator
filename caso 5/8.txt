###### Como utilizar ########

# 1) Copiar e colar o código abaixo no simulador turingmachine.io
# 2) Clicar em 'load machine'
# 3) Clicar em 'run' ou, alternativamente, em 'step' para avançar a máquina passo a passo

### Nota 1 ###
# Todas as máquinas para o simulador contém um estado chamado "set". Esse estado não é listado nas tabelas.
# Esse estado coloca o cabeçote da máquina na posição em que o cabeçote estava no momento em que a máquina da etapa anterior parou. 
# Isto é para simular as várias etapas como se fossem uma máquina só.

### Nota 2 ###
# É possível modificar o input se quiser testar outras palavras de entrada.
# Se atente que a cada etapa o formato da palavra de entrada deve ser igual a palavra na fita deixada pela máquina anterior.
# Uma boa idéia é simular o fluxo inteiro desde a etapa 0, atualizando manualmente a palavra de entrada e copiando a máquina da próxima etapa a partir da segunda linha (blank: ' ').

# Exemplo -> De 30º leste para 15º leste, voo parte as 3 horas da manhã e dura 2 horas

input: '<1B1CXXXDXXE111111111111111111111111111111F111111111111111G1111'
blank: ' '
start state: set
table:
  # MAIN MACHINE
  set:
    ['B','C','D','E','F', 0, 1, 'X', '<'] : {R: set}
    'G' : {write: 'G', L: 0}
  0:
    ['G', 1] : {R: 0}
    ' ' : {write: ' ', L: 1}
  1:
    1 : {write: 1, L: 2}
    'G' : {write: 'G', R: check0}
  2:
    1 : {write: 1, L: 3}
    'G' : {write: 'G', R: erase}
  3:
    1 : {write: 1, L: 4}
    'G' : {write: 'G', R: erase}
  4:
    1 : {write: 1, L: 5}
    'G' : {write: 'G', R: erase}
  5:
    1 : {write: 1, L: 6}
    'G' : {write: 'G', R: erase}
  6:
    1 : {write: 1, L: 7}
    'G' : {write: 'G', R: erase}
  7:
    1 : {write: 1, L: 8}
    'G' : {write: 'G', R: erase}
  8:
    1 : {write: 1, L: 9}
    'G' : {write: 'G', R: erase}
  9:
    1 : {write: 1, L: 10}
    'G' : {write: 'G', R: erase}
  10:
    1 : {write: 1, L: 11}
    'G' : {write: 'G', R: erase}
  11:
    1 : {write: 1, L: 12}
    'G' : {write: 'G', R: erase}
  12:
    1 : {write: 1, L: 13}
    'G' : {write: 'G', R: erase}
  13:
    1 : {write: 1, L: 14}
    'G' : {write: 'G', R: erase}
  14:
    1 : {write: 1, L: 15}
    'G' : {write: 'G', R: erase}
  15:
    1 : {write: 1, L: 16}
    'G' : {write: 'G', R: erase}
  16:
    1 : {write: 1, L: 17}
    'G' : {write: 'G', R: erase}
  17:
    1 : {write: 1, L: 18}
    'G' : {write: 'G', R: erase}
  18:
    1 : {write: 1, L: 19}
    'G' : {write: 'G', R: erase}
  19:
    1 : {write: 1, L: 20}
    'G' : {write: 'G', R: erase}
  20:
    1 : {write: 1, L: 21}
    'G' : {write: 'G', R: erase}
  21:
    1 : {write: 1, L: 22}
    'G' : {write: 'G', R: erase}
  22:
    1 : {write: 1, L: 23}
    'G' : {write: 'G', R: erase}
  23:
    1 : {write: 1, L: 24}
    'G' : {write: 'G', R: erase}
  24:
    1 : {write: 'X', L: 1}
    'G' : {write: 'G', R: erase}
  check0:
    'X' : {write: 0, R: erase1}
  erase:
    1 : {write: 1, R: erase}
    ' ' : {write: ' ', L: done}
    'X' : {write: ' ', R: erase1}
  erase1:
    1 : {write: ' ', R: erase1}
    'X' : {write: ' ', R: erase1}
    ' ' : {write: ' ', L: done}
  done:
    ['B','C','D','E','F', 0, 1, 'X', ' '] : {L: done}
  