###### Como utilizar ########

# 1) Copiar e colar o código abaixo no simulador turingmachine.io
# 2) Clicar em 'load machine'
# 3) Clicar em 'run' ou, alternativamente, em 'step' para avançar a máquina passo a passo

### Nota 1 ###
# Todas as máquinas para o simulador contém um estado chamado "set". Esse estado não é listado nas tabelas.
# Esse estado coloca o cabeçote da máquina na posição em que o cabeçote estava no momento em que a máquina da etapa anterior parou. 
# Isto é para simular as várias etapas como se fossem uma máquina só.

### Nota 2 ###
# É possível modificar o input se quiser testar outras palavras de entrada.
# Se atente que a cada etapa o formato da palavra de entrada deve ser igual a palavra na fita deixada pela máquina anterior.
# Uma boa idéia é simular o fluxo inteiro desde a etapa 0, atualizando manualmente a palavra de entrada e copiando a máquina da próxima etapa a partir da segunda linha (blank: ' ').


input: '<0B1C111111111111111D1111E111111111111111111111111111111111111111111111111111111111111111111111111111F111111111111111G11111 1'
blank: ' '
start state: set
table:
  # SUM MODULE
  sum0:
    1 : {write: 1, R: sum0}
    ' ' : {write: ' ', R: sum1}
  sum1:
    1 : {write: 1, R: sum1}
    ' ' : {write: ' ', L: sum2}
  sum2:
    1 : {write: ' ', L: sum3}
  sum3:
    1 : {write: 1, L: sum3}
    ' ' : {write: 1, L: sumReset}
  sumReset:
    1 : {write: 1, L: sumReset}
    'G' : {write: 'G', L: sumDone1_1}
    'A' : {write: 'G', L: sumDone1_2}
    'H' : {write: 'G', L: sumDone1_3}
    
  # MAIN MACHINE
  set:
    '<' : {write: '<', R: eval}
  # EVALUATE POSITIONS
  eval:
    0 : {write: 0, R: bit1}
  bit1:
    'B' : {write: 'B', R: bit1}
    1 : {write: 1, R: bit2}
  bit2:
    ['B','C','D','E','F', 0, 1, 'X'] : {R: bit2}
    'G' : {write: 'G', R: sum0}
  # SUM OF COORD DONE, BEGIN COPYING START TIME
  sumDone1_1:
    ['E','F', 'G', 0, 1, 'X', ' '] : {L: sumDone1_1}
    'D' : {write: 'D', L: copy1_0}
    'C' : {write: 'C', R: copyDone1}
  copy1_0:
    'X' : {write: 'X', L: copy1_0}
    'C' : {write: 'C', R: copyDone1}
    1 : {write: 'X', R: copy1_1}
  copy1_1:
    ['B','C','D','E', 'F','G', 'X', 0, 1] : {R: copy1_1}
    ' ' : {write: ' ', R: copy1_2}
  copy1_2:
    1 : {write: 1, R: copy1_2}
    ' ' : {write: 1, L: sumDone1_1}
  copyDone1:
    ['B','C','D','E','F', 0, 1, 'X'] : {R: copyDone1}
    'G' : {write: 'A', R: sum0}    
  sumDone1_2:
    ['F', 'G', 0, 1, 'X', ' '] : {L: sumDone1_2}
    'E' : {write: 'E', L: copy2_0}
  copy2_0:
    'X' : {write: 'X', L: copy2_0}
    'D' : {write: 'D', R: copyDone2}
    1 : {write: 'X', R: copy2_1}
  copy2_1:
    ['B','C','D','E', 'F','G', 'X', 0, 1] : {R: copy2_1}
    ' ' : {write: ' ', R: copy2_2}
  copy2_2:
    1 : {write: 1, R: copy2_2}
    ' ' : {write: 1, L: sumDone1_2}
  copyDone2:
    ['B','C','D','E','F', 0, 1, 'X'] : {R: copyDone2}
    'G' : {write: 'H', R: sum0}
  sumDone1_3: